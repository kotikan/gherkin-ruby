#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require_relative "scenario_lexer"
  require_relative "../ast"

module GherkinRuby
  class ScenarioParser < Racc::Parser

module_eval(<<'...end scenario.y/module_eval...', 'scenario.y', 87)

  def parse(input)
    @yydebug = true if ENV['DEBUG_RACC']
    scan_str(input)
  end
...end scenario.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    10,    10,     4,    27,    10,    19,    20,    21,    22,    23,
    32,    10,    10,    34,    34,    47,    46,    19,    20,    21,
    22,    23,    43,    10,    10,    25,     4,    16,    19,    20,
    21,    22,    23,    10,     4,    14,     5,     7,    13,     4,
     4,     4,     5,     7,     4,    40,    10,    11,     8,    44,
     4,     4 ]

racc_action_check = [
    26,    37,    32,    18,    45,    26,    26,    26,    26,    26,
    26,    38,    28,    26,    37,    45,    45,    28,    28,    28,
    28,    28,    38,    15,    12,    16,    11,    12,    15,    15,
    15,    15,    15,     3,     6,     8,     3,     3,     6,     0,
    29,    30,     0,     0,    17,    34,    36,     5,     1,    39,
    42,    25 ]

racc_action_pointer = [
    37,    48,   nil,    31,   nil,    30,    32,   nil,    35,   nil,
   nil,    24,    22,   nil,   nil,    21,     8,    42,   -14,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    -2,   nil,    10,    38,
    39,   nil,     0,   nil,    29,   nil,    44,    -1,     9,    33,
   nil,   nil,    48,   nil,   nil,     2,   nil,   nil ]

racc_action_default = [
   -30,   -30,    -1,   -30,    -3,   -30,   -30,   -28,   -30,    -2,
    -4,   -30,   -30,   -29,    48,   -30,   -30,    -5,   -30,   -13,
   -14,   -15,   -16,   -17,   -26,   -30,    -6,   -12,   -30,    -7,
    -9,   -11,   -30,   -21,   -30,   -27,    -8,   -10,   -30,   -23,
   -24,   -22,   -30,   -19,   -25,   -30,   -18,   -20 ]

racc_goto_table = [
     3,    24,    33,    29,     2,    30,    12,     9,    42,     1,
    39,    15,    31,    41,    35,   nil,   nil,    26,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,    36,
    37,   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    45 ]

racc_goto_check = [
     3,     4,    10,     6,     2,     7,     3,     2,     9,     1,
    11,     3,     4,    10,     4,   nil,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,     3,
     3,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     9,     4,     0,   -14,   nil,   -23,   -21,   nil,   -30,
   -24,   -24,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,    18,   nil,
   nil,   nil,     6 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_1,
  2, 19, :_reduce_2,
  1, 21, :_reduce_none,
  2, 21, :_reduce_none,
  1, 22, :_reduce_5,
  2, 22, :_reduce_6,
  3, 22, :_reduce_7,
  4, 22, :_reduce_8,
  3, 22, :_reduce_9,
  4, 22, :_reduce_10,
  3, 22, :_reduce_11,
  2, 23, :_reduce_12,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  5, 24, :_reduce_18,
  1, 27, :_reduce_19,
  3, 27, :_reduce_20,
  1, 25, :_reduce_21,
  3, 25, :_reduce_22,
  2, 28, :_reduce_23,
  1, 29, :_reduce_24,
  2, 29, :_reduce_25,
  4, 20, :_reduce_26,
  6, 20, :_reduce_27,
  1, 30, :_reduce_28,
  2, 30, :_reduce_29 ]

racc_reduce_n = 30

racc_shift_n = 48

racc_token_table = {
  false => 0,
  :error => 1,
  :NEWLINE => 2,
  :FEATURE => 3,
  :BACKGROUND => 4,
  :SCENARIO => 5,
  :TAG => 6,
  :GIVEN => 7,
  :WHEN => 8,
  :THEN => 9,
  :AND => 10,
  :BUT => 11,
  :DOC_STRING_START => 12,
  :DOC_STRING_LINE => 13,
  :DOC_STRING_END => 14,
  :TABLE_ROW_START => 15,
  :TABLE_CELL => 16,
  :TEXT => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NEWLINE",
  "FEATURE",
  "BACKGROUND",
  "SCENARIO",
  "TAG",
  "GIVEN",
  "WHEN",
  "THEN",
  "AND",
  "BUT",
  "DOC_STRING_START",
  "DOC_STRING_LINE",
  "DOC_STRING_END",
  "TABLE_ROW_START",
  "TABLE_CELL",
  "TEXT",
  "$start",
  "Root",
  "Scenario",
  "Newline",
  "Steps",
  "Step",
  "DocString",
  "Table",
  "Keyword",
  "DocStringLines",
  "TableRow",
  "TableCells",
  "Tags" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'scenario.y', 16)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 17)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'scenario.y', 26)
  def _reduce_5(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 27)
  def _reduce_6(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 28)
  def _reduce_7(val, _values, result)
     val[0].doc_string = val[2]; result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 29)
  def _reduce_8(val, _values, result)
     val[0].doc_string = val[2]; result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 30)
  def _reduce_9(val, _values, result)
     val[0].table = val[2]; result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 31)
  def _reduce_10(val, _values, result)
     val[0].table = val[2]; result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 32)
  def _reduce_11(val, _values, result)
     val[2].unshift(val[0]); result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 36)
  def _reduce_12(val, _values, result)
     result = AST::Step.new(val[1], val[0]); result.pos(filename, lineno) 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'scenario.y', 44)
  def _reduce_18(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 48)
  def _reduce_19(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 49)
  def _reduce_20(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 53)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 54)
  def _reduce_22(val, _values, result)
     val[0] << val[2]; result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 58)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 62)
  def _reduce_24(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 63)
  def _reduce_25(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 68)
  def _reduce_26(val, _values, result)
     result = AST::Scenario.new(val[1], val[3]); result.pos(filename, lineno - 1) 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 71)
  def _reduce_27(val, _values, result)
     result = AST::Scenario.new(val[3], val[5], val[0]); result.pos(filename, lineno - 2) 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 75)
  def _reduce_28(val, _values, result)
     result = [AST::Tag.new(val[0])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'scenario.y', 76)
  def _reduce_29(val, _values, result)
     result = val[0] << AST::Tag.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class ScenarioParser
  end   # module GherkinRuby
